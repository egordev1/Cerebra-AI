#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Å–±—Ä–æ—Å–∞ –¥–æ –∑–∞–≤–æ–¥—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""
import os
import shutil

def cleanup():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üßπ –û–ß–ò–°–¢–ö–ê –ü–†–û–ï–ö–¢–ê –î–û –ó–ê–í–û–î–°–ö–ò–• –ù–ê–°–¢–†–û–ï–ö")
    print("="*60)
    
    # –ß—Ç–æ –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å
    cleanup_items = [
        ("training_data/", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è"),
        ("models/*.pth", "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏"),
        ("models/tokenizer.json", "–¢–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä"),
        ("logs/", "–õ–æ–≥–∏"),
        ("__pycache__/", "–ö—ç—à Python"),
        ("*.pyc", "–°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"),
    ]
    
    print("\nüìã –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:")
    for path, desc in cleanup_items:
        print(f"   - {desc} ({path})")
    
    confirm = input("\n‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no): ").strip().lower()
    
    if confirm != 'yes':
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    removed_count = 0
    
    # –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    dirs_to_remove = ['training_data', 'logs', '__pycache__']
    for dir_name in dirs_to_remove:
        if os.path.exists(dir_name):
            try:
                shutil.rmtree(dir_name)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_name}/")
                removed_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {dir_name}/: {e}")
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π
    models_dir = 'models'
    if os.path.exists(models_dir):
        for file in os.listdir(models_dir):
            if file.endswith(('.pth', '.json')):
                try:
                    os.remove(os.path.join(models_dir, file))
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: models/{file}")
                    removed_count += 1
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ models/{file}: {e}")
    
    # –£–¥–∞–ª—è–µ–º .pyc —Ñ–∞–π–ª—ã
    for root, dirs, files in os.walk('.'):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if 'venv' in root or '.git' in root:
            continue
        for file in files:
            if file.endswith('.pyc'):
                try:
                    os.remove(os.path.join(root, file))
                    removed_count += 1
                except:
                    pass
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {removed_count}")
    print("üí° –ü—Ä–æ–µ–∫—Ç —Å–±—Ä–æ—à–µ–Ω –¥–æ –∑–∞–≤–æ–¥—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")

if __name__ == "__main__":
    cleanup()

