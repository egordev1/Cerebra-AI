#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Cerebra AI
"""

import sys
import os

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(current_dir)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
if project_root not in sys.path:
    sys.path.insert(0, project_root)

try:
    from cerebra import ai
    from cerebra.utils import print_system_info
    print("‚úÖ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print(f"üìÅ Project root: {project_root}")
    print(f"üìÅ Python path: {sys.path}")
    sys.exit(1)

def main():
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    print_system_info()
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    print("\n1. –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
    model = ai.load_model("Synthesis-L1")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    print("\n2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:")
    print(ai.info())
    
    # –¢–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞
    print("\n3. –¢–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞:")
    test_messages = [
        "–ø—Ä–∏–≤–µ—Ç Cerebra",
        "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ",
        "—á—Ç–æ —Ç–∞–∫–æ–µ Synthesis-L1?",
        "–∫–∞–∫ —Ç–µ–±—è –æ–±—É—á–∞—Ç—å?",
        "–ø–æ–∫–∞"
    ]
    
    for message in test_messages:
        response = ai.chat(message)
        print(f"üë§: {message}")
        print(f"ü§ñ: {response}\n")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è
    print("\n4. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è:")
    ai.train_model(epochs=2)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
    print("\n5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏...")
    ai.save_model("models/synthesis_l1_demo.pth")
    
    print("\nüéâ Cerebra AI –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")

if __name__ == "__main__":
    main()